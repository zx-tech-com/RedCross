<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd">

	<!-- 定时器注解驱动 -->
	<task:annotation-driven/>

	<!-- 扫描service bean,GlobalExceptionHandler -->
	
	<context:component-scan base-package="com.zx.redcross.serviceimpl,com.zx.redcross.exception.handler,com.zx.redcross.task"></context:component-scan>
	
	
	<!-- 数据库配置文件-->
	<!--
	
	<context:property-placeholder file-encoding="utf-8" location="classpath:server.database.properties"/>
	--> 
	
	<context:property-placeholder file-encoding="utf-8" location="classpath:server.local.database.properties"/>
	
	<!-- JNDI获取数据源(使用dbcp连接池) 这里用了dbcp2 同dbcp 还是有点差别的-->  
    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close" scope="singleton">
    	<property name="driverClassName" value="${db.driver}" />
        <property name="url" value="${db.url}" />
        <property name="username" value="${db.user}" />
        <property name="password" value="${db.password}" />
        <property name="initialSize" value="${db.initialSize}" />
        <property name="maxTotal" value="${db.maxTotal}" />
        <property name="maxIdle" value="${db.maxIdle}" />
        <property name="minIdle" value="${db.minIdle}" />
        <property name="maxWaitMillis" value="${db.maxWaitMillis}" />
        <property name="removeAbandonedOnMaintenance" value="${db.removeAbandonedOnMaintenance}" />
        <property name="removeAbandonedTimeout" value="${db.removeAbandonedTimeout}" />
    </bean>

	<!-- 配置mybatis的sqlSession -->
	<bean class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
    	<property name="configLocation" value="classpath:mybatis-config.xml"/>
    	<property name="mapperLocations" value="classpath*:com/zx/redcross/mapper/**/*Mapper.xml"></property>
	</bean>
	
	
	<!-- 配置事务管理器-->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" /> 
	</bean>
	
	<!-- 配置事务属性(通知) -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" isolation="DEFAULT" timeout="5" read-only="true"/>
			<tx:method name="list*" isolation="DEFAULT" timeout="5" read-only="true"/>
			<tx:method name="find*" isolation="DEFAULT" timeout="5" read-only="true"/>
			<tx:method name="adminGet*" isolation="DEFAULT" timeout="5" read-only="true"/>
			<tx:method name="adminList*" isolation="DEFAULT" timeout="5" read-only="true"/>
			<tx:method name="adminFind*" isolation="DEFAULT" timeout="5" read-only="true"/>
			
			<tx:method name="save*" rollback-for="Exception" propagation="REQUIRED"/>
			<tx:method name="remove*" rollback-for="Exception" propagation="REQUIRED"/>
			<tx:method name="update*" rollback-for="Exception" propagation="REQUIRED"/>
			
			<!-- 不建议使用以下名字开头的方法 -->
			<tx:method name="add*" rollback-for="Exception" propagation="REQUIRED"/>
			<tx:method name="delete*" rollback-for="Exception" propagation="REQUIRED"/>
			<tx:method name="modify*" rollback-for="Exception" propagation="REQUIRED"/>
			
			
			<tx:method name="adminSave*" rollback-for="Exception" propagation="REQUIRED"/>
			<tx:method name="adminAdd*" rollback-for="Exception" propagation="REQUIRED"/>
			
			<tx:method name="adminRemove*" rollback-for="Exception" propagation="REQUIRED"/>
			<tx:method name="adminDelete*" rollback-for="Exception" propagation="REQUIRED"/>
			
			<tx:method name="adminUpdate*" rollback-for="Exception" propagation="REQUIRED"/>
			<tx:method name="adminModify*" rollback-for="Exception" propagation="REQUIRED"/>
		</tx:attributes>
	</tx:advice>
	
	<!-- 配置切面(切点+通知) -->
	<aop:aspectj-autoproxy/>
	<aop:config>
		<aop:pointcut expression="execution(* com.zx.redcross.service.*.*.*(..))" id="pointcut"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut"/>
	</aop:config>
	
	
	<!-- 自动扫描,将Mapper接口生成代理注入到spring -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
         <property name="basePackage" value="com.zx.redcross.dao" />  
    </bean>
    
    
</beans>
