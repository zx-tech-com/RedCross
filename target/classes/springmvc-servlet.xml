<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

	<!--controller 控制器在springmvc-servlet.xml中扫描  -->
	<context:component-scan base-package="com.zx.redcross.controller"></context:component-scan>
	
	<!-- json支持 -->
	<mvc:annotation-driven validator="validator" >
        <mvc:message-converters register-defaults="true">
            <!-- 配置Fastjson支持 -->
            <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                    	<!-- 网上总说必须要添加text/html,并且要把他放在首位,我注释掉,也没发现有什么问题 -->
                        <!-- <value>text/html;charset=UTF-8</value> -->
                        <value>application/json;charset=UTF-8</value>
                        <!-- <value>multipart/form-data;charset=UTF-8</value> -->
                    </list>
                </property>
                <property name="fastJsonConfig">
                	<bean class="com.alibaba.fastjson.support.config.FastJsonConfig">
				 		<property name="serializerFeatures">
					       <array>
				              	<value>WriteMapNullValue</value>
				               <!-- 如果不添加WriteDateUseDateFormat,
				               		输出的日期是这样的:1531536958391
				               		添加后是这样的:2018-07-14 10:55:23	
				               	 -->
				               <value>WriteDateUseDateFormat</value>
				           </array>
					   </property>
				 	</bean>
                </property>
            </bean>
        	<bean class = "org.springframework.http.converter.StringHttpMessageConverter"/>
        </mvc:message-converters>
    </mvc:annotation-driven>
 	
 	<!-- 配置控制器model 的validator -->
 	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
 		<property name="providerClass" value="org.hibernate.validator.HibernateValidator"></property>
 		<!-- validationMessageSource属性可以不提供,默认会查找classpath:ValidationMessages.properties文件 -->
 		<property name="validationMessageSource" ref="messageSource"></property>
 	</bean>
 	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
 		<property name="basenames" value="classpath:modelMessages" />
 		<property name="defaultEncoding" value="UTF-8"/>
 		 <property name="cacheSeconds" value="60"/>
 	</bean>
 
     <!-- 配置interceptors -->
	 <mvc:interceptors> 
	 	<!-- 配置后台管理数据访问接口 -->
		<mvc:interceptor>
			<mvc:mapping path="/**/back/**"/>
			<bean class="com.zx.redcross.interceptor.DataAccessInterceptor"/>
		</mvc:interceptor>
		<!-- 配置接口是否可被游客访问的拦截器 -->
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<bean class="com.zx.redcross.interceptor.InterfaceOpenInterceptor"/>
		</mvc:interceptor> 
	</mvc:interceptors>

	<!-- 上传文件支持 配置MultipartResolver -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		 <property name="maxUploadSize" value="5000000"/>
		 <property name="defaultEncoding" value="UTF-8"/>
	</bean>

	<mvc:resources location="/" mapping="404.html"></mvc:resources>
	
	<mvc:default-servlet-handler />
</beans>
